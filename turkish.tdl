;;; -*- Mode: TDL; Coding: utf-8 -*-
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Grammar of Turkish
;;; created at:
;;;     Thu Apr 27 07:33:44 UTC 2017
;;; based on Matrix customization system version of:
;;;     Tue Apr 25 03:52:37 UTC 2017
;;;
;;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Type assigning empty mod list. Added to basic types for nouns, verbs and determiners.

non-mod-lex-item := lex-item &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD < > ].

;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Matrix Type Addenda
;;;;;;;;;;;;;;;;;;;;;;;;;

+np :+ [ CASE case,
    CASE-MARKED bool ].

head :+ [ PRD bool,
    FORM form,
    AUX bool ].

inflected :+ [ NEG-LEX-RULE-FLAG luk,
    NUMBER-COMMON-NOUN-FLAG luk,
    BASIC-ADJECTIVE_OPT_COP-FLAG luk,
    NEG-COP-LEX-RULE-FLAG luk,
    TENSE-VERB-FLAG luk,
    ASPECT-VERB-FLAG luk,
    CASE-COMMON-NOUN-FLAG luk,
    POSS-FLAG luk,
    AGREEMENT-VERB-FLAG luk,
    TENSE-ADJECTIVE-FLAG luk,
    POLARITY-VERB-FLAG luk,
    AGREEMENT-COPULA-FLAG luk,
    POLARITY-COPULA-FLAG luk,
    TENSE-COPULA-FLAG luk,
    AGREEMENT-ADJECTIVE-FLAG luk,
    ASPECT-COPULA-FLAG luk ].

infl-satisfied :+ [ NEG-LEX-RULE-FLAG na-or-+,
    NUMBER-COMMON-NOUN-FLAG na-or-+,
    BASIC-ADJECTIVE_OPT_COP-FLAG na-or-+,
    NEG-COP-LEX-RULE-FLAG na-or-+,
    TENSE-VERB-FLAG na-or-+,
    ASPECT-VERB-FLAG na-or-+,
    CASE-COMMON-NOUN-FLAG na-or-+,
    POSS-FLAG na-or-+,
    AGREEMENT-VERB-FLAG na-or-+,
    TENSE-ADJECTIVE-FLAG na-or-+,
    POLARITY-VERB-FLAG na-or-+,
    AGREEMENT-COPULA-FLAG na-or-+,
    POLARITY-COPULA-FLAG na-or-+,
    TENSE-COPULA-FLAG na-or-+,
    AGREEMENT-ADJECTIVE-FLAG na-or-+,
    ASPECT-COPULA-FLAG na-or-+ ].

png :+ [ PER person,
    NUM number ].

basic-head-comp-phrase :+ [ SYNSEM.LOCAL.CAT.MC #mc,
    HEAD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].

basic-head-mod-phrase-simple :+ [ SYNSEM.LOCAL.CAT.MC #mc,
    NON-HEAD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].

basic-head-opt-subj-phrase :+ [ HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.COMPS < > ].

; We can't just use the V-final and V-initial word
; order modules together to get a good free word order
; module. The root of the problem seems to be that we
; need the subject to be able to attach inside the
; object(s) for VSO and OSV, but at the same time, we
; don't want complete flexibility on order of attachment
; when the verb is in the middle -- that would give
; spurious ambiguity.  This solution adopts the xmod
; hierarchy to enforce right-first attachment.  That is,
; all arguments appears to the right of the verb must
; attach before all arguments appearing to the left.  The
; linguistic prediction of this analysis is that free
; word order languages do not have a consistent VP
; consituent, even when the verb and object are adjacent
; (OV order).  Using a separate feature for tracking
; argument attachment (as opposed to modifier
; attachment).  We might be able to collapse these one
; day, but that's not obvious.

synsem :+ [ ATTACH xmod ].

; We'll need to add identification of ATTACH between
; mother and head-daughter for all other kinds of phrases
; if we do this.  Just for illustration, I'm putting it
; in for head-adjunct phrases here:

head-mod-phrase :+ [ SYNSEM.ATTACH #attach,
    HEAD-DTR.SYNSEM.ATTACH #attach ].

;;; Demonstrative relations

demonstrative_a_rel := predsort.
proximal+dem_a_rel := demonstrative_a_rel. ; close to speaker
distal+dem_a_rel := demonstrative_a_rel.   ; away from speaker
remote+dem_a_rel := distal+dem_a_rel.      ; away from speaker and hearer
hearer+dem_a_rel := distal+dem_a_rel.      ; near hearer

;;;;;;;;;;;;;;
;;; Features
;;;;;;;;;;;;;;

;;; Case

case := *top*.
nom := case.  ; nom
acc := case.  ; acc
dat := case.  ; dat
abl := case.  ; abl
gen := case.  ; gen
loc := case.  ; loc
com := case.  ; com

;;; Person

person := *top*.
1st := person.
2nd := person.
3rd := person.

;;; Number

number := *top*.
sg := number.
pl := number.

;;; Form

form := *top*.
nonfinite := form.
finite := form.

;;; Tense

nonpast := tense.
past := tense.

;;; Aspect

perfective := aspect.
imperfective := aspect.
habitual := aspect.
prospective := aspect.

;;;;;;;;;;;;;;;;;;;
;;; Lexical Types
;;;;;;;;;;;;;;;;;;;

;;; Nouns

noun-lex := basic-noun-lex & basic-one-arg & no-hcons-lex-item & non-mod-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL [ SPR < #spr &
                                 [ LOCAL.CAT.HEAD det ] >,
                           COMPS < >,
                           SUBJ < >,
                           SPEC < > ],
    ARG-ST < #spr > ].

no-spr-noun-lex := noun-lex &
  [ SYNSEM.LOCAL.CAT.VAL.SPR < [ OPT + ] > ].

; Nouns which cannot take specifiers mark their SPR requirement
; as OPT +.  Making the non-head daughter OPT - in this rule
; keeps such nouns out.
; 
; Rules for building NPs.  Note that the Matrix uses SPR for
; the specifier of nouns and SUBJ for the subject (specifier) of verbs.

head-spec-phrase := basic-head-spec-phrase & head-final &
  [ NON-HEAD-DTR.SYNSEM.OPT - ].

common-noun-lex := noun-lex & case-common-noun-rule-dtr & poss-common-noun-rule-dtr &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 3rd,
    INFLECTED [ CASE-COMMON-NOUN-FLAG -,
                NUMBER-COMMON-NOUN-FLAG - ] ].

personal-pronoun-lex := no-spr-noun-lex & 
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX [ COG-ST activ-or-more, 
                                   SPECI + ] ].

1sg-pronoun-noun-lex := personal-pronoun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 1st,
                                       NUM sg ] ].

nom-1sg-pronoun-noun-lex := 1sg-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE nom,
                            CASE-MARKED + ] ].

acc-1sg-pronoun-noun-lex := 1sg-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE acc,
                            CASE-MARKED + ] ].

dat-1sg-pronoun-noun-lex := 1sg-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE dat,
                            CASE-MARKED + ] ].

abl-1sg-pronoun-noun-lex := 1sg-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE abl,
                            CASE-MARKED + ] ].

gen-1sg-pronoun-noun-lex := 1sg-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE gen,
                            CASE-MARKED + ] ].

loc-1sg-pronoun-noun-lex := 1sg-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE loc,
                            CASE-MARKED + ] ].

1pl-pronoun-noun-lex := personal-pronoun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 1st,
                                       NUM pl ] ].

nom-1pl-pronoun-noun-lex := 1pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE nom,
                            CASE-MARKED + ] ].

acc-1pl-pronoun-noun-lex := 1pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE acc,
                            CASE-MARKED + ] ].

dat-1pl-pronoun-noun-lex := 1pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE dat,
                            CASE-MARKED + ] ].

abl-1pl-pronoun-noun-lex := 1pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE abl,
                            CASE-MARKED + ] ].

gen-1pl-pronoun-noun-lex := 1pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE gen,
                            CASE-MARKED + ] ].

loc-1pl-pronoun-noun-lex := 1pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE loc,
                            CASE-MARKED + ] ].

2sg-pronoun-noun-lex := personal-pronoun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 2nd,
                                       NUM sg ] ].

nom-2sg-pronoun-noun-lex := 2sg-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE nom,
                            CASE-MARKED + ] ].

acc-2sg-pronoun-noun-lex := 2sg-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE acc,
                            CASE-MARKED + ] ].

dat-2sg-pronoun-noun-lex := 2sg-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE dat,
                            CASE-MARKED + ] ].

abl-2sg-pronoun-noun-lex := 2sg-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE abl,
                            CASE-MARKED + ] ].

gen-2sg-pronoun-noun-lex := 2sg-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE gen,
                            CASE-MARKED + ] ].

loc-2sg-pronoun-noun-lex := 2sg-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE loc,
                            CASE-MARKED + ] ].

2pl-pronoun-noun-lex := personal-pronoun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 2nd,
                                       NUM pl ] ].

nom-2pl-pronoun-noun-lex := 2pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE nom,
                            CASE-MARKED + ] ].

acc-2pl-pronoun-noun-lex := 2pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE acc,
                            CASE-MARKED + ] ].

dat-2pl-pronoun-noun-lex := 2pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE dat,
                            CASE-MARKED + ] ].

abl-2pl-pronoun-noun-lex := 2pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE abl,
                            CASE-MARKED + ] ].

gen-2pl-pronoun-noun-lex := 2pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE gen,
                            CASE-MARKED + ] ].

loc-2pl-pronoun-noun-lex := 2pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE loc,
                            CASE-MARKED + ] ].

3sgpl-pronoun-noun-lex := personal-pronoun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 3rd ].

nom-3sgpl-pronoun-noun-lex := 3sgpl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE nom,
                            CASE-MARKED + ] ].

acc-3sgpl-pronoun-noun-lex := 3sgpl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE acc,
                            CASE-MARKED + ] ].

dat-3sgpl-pronoun-noun-lex := 3sgpl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE dat,
                            CASE-MARKED + ] ].

abl-3sgpl-pronoun-noun-lex := 3sgpl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE abl,
                            CASE-MARKED + ] ].

gen-3sgpl-pronoun-noun-lex := 3sgpl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE gen,
                            CASE-MARKED + ] ].

loc-3sgpl-pronoun-noun-lex := 3sgpl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE loc,
                            CASE-MARKED + ] ].

3pl-pronoun-noun-lex := personal-pronoun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER 3rd,
                                       NUM pl ] ].

nom-3pl-pronoun-noun-lex := 3pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE nom,
                            CASE-MARKED + ] ].

acc-3pl-pronoun-noun-lex := 3pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE acc,
                            CASE-MARKED + ] ].

dat-3pl-pronoun-noun-lex := 3pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE dat,
                            CASE-MARKED + ] ].

abl-3pl-pronoun-noun-lex := 3pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE abl,
                            CASE-MARKED + ] ].

gen-3pl-pronoun-noun-lex := 3pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE gen,
                            CASE-MARKED + ] ].

loc-3pl-pronoun-noun-lex := 3pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE loc,
                            CASE-MARKED + ] ].

com-1sg-pronoun-noun-lex := 1sg-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE com,
                            CASE-MARKED + ] ].

com-1pl-pronoun-noun-lex := 1pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE com,
                            CASE-MARKED + ] ].

com-2sg-pronoun-noun-lex := 2sg-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE com,
                            CASE-MARKED + ] ].

com-2pl-pronoun-noun-lex := 2pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE com,
                            CASE-MARKED + ] ].

com-3sgpl-pronoun-noun-lex := 3sgpl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE com,
                            CASE-MARKED + ] ].

com-3pl-pronoun-noun-lex := 3pl-pronoun-noun-lex &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE com,
                            CASE-MARKED + ] ].

;;; Verbs

verb-lex := non-mod-lex-item &
  [ SYNSEM.LOCAL.CAT.HEAD verb,
    INFLECTED.NEG-LEX-RULE-FLAG na-or-- ].

main-verb-lex := verb-lex & basic-verb-lex & agreement-verb-rule-dtr & aspect-verb-rule-dtr & polarity-verb-rule-dtr & tense-verb-rule-dtr &
  [ SYNSEM.LOCAL [ CAT [ HEAD.AUX -,
                         VAL [ SPR < >,
                               SPEC < >,
                               SUBJ < #subj > ] ],
                   CONT.HOOK.XARG #xarg ],
    ARG-ST.FIRST #subj &
                 [ LOCAL [ CAT.VAL [ SPR < >,
                                     COMPS < > ],
                           CONT.HOOK.INDEX #xarg ] ],
    INFLECTED [ AGREEMENT-VERB-FLAG -,
                POLARITY-VERB-FLAG -,
                TENSE-VERB-FLAG -,
                ASPECT-VERB-FLAG - ] ].

aux-lex := verb-lex & agreement-verb-rule-dtr & tense-verb-rule-dtr &
  [ SYNSEM.LOCAL.CAT.HEAD.AUX +,
    INFLECTED [ TENSE-VERB-FLAG -,
                AGREEMENT-VERB-FLAG - ] ].

intransitive-verb-lex := main-verb-lex & intransitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < >,
    ARG-ST.FIRST.LOCAL.CAT.HEAD +np ].

transitive-verb-lex := main-verb-lex & transitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < #comps >,
    ARG-ST < [ LOCAL.CAT.HEAD +np ],
             #comps &
             [ LOCAL.CAT [ VAL [ SPR < >,
                                 COMPS < > ],
                           HEAD +np ] ] > ].

nom-intransitive-verb-lex := intransitive-verb-lex &
  [ ARG-ST.FIRST.LOCAL.CAT.HEAD noun &
                                [ CASE nom ],
    SYNSEM.LOCAL.CAT.VAL.SUBJ < [ LOCAL.CAT.HEAD.CASE-MARKED + ] > ].

nom-acc-transitive-verb-lex := transitive-verb-lex &
  [ ARG-ST < [ LOCAL.CAT.HEAD noun &
                              [ CASE nom ] ],
             [ LOCAL.CAT.HEAD noun &
                              [ CASE acc ] ] >,
    SYNSEM.LOCAL.CAT.VAL [ SUBJ < [ LOCAL.CAT.HEAD.CASE-MARKED + ] >,
                           COMPS < [ LOCAL.CAT.HEAD.CASE-MARKED + ] > ] ].

itr-verb-lex := nom-intransitive-verb-lex.

acc-tr-verb-lex := nom-acc-transitive-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST.LOCAL.CAT.HEAD [ CASE nom,
                                                       CASE-MARKED + ],
                           COMPS.FIRST [ LOCAL.CAT.HEAD [ CASE acc,
                                                          CASE-MARKED + ],
                                         OPT - ] ] ].

dat-tr-verb-lex := transitive-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST.LOCAL.CAT.HEAD [ CASE nom,
                                                       CASE-MARKED + ],
                           COMPS.FIRST [ LOCAL.CAT.HEAD [ CASE dat,
                                                          CASE-MARKED + ],
                                         OPT + ] ] ].

abl-tr-verb-lex := transitive-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST.LOCAL.CAT.HEAD [ CASE nom,
                                                       CASE-MARKED + ],
                           COMPS.FIRST [ LOCAL.CAT.HEAD [ CASE abl,
                                                          CASE-MARKED + ],
                                         OPT + ] ] ].

loc-tr-verb-lex := transitive-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST.LOCAL.CAT.HEAD [ CASE nom,
                                                       CASE-MARKED + ],
                           COMPS.FIRST [ LOCAL.CAT.HEAD [ CASE loc,
                                                          CASE-MARKED + ],
                                         OPT + ] ] ].

com-tr-verb-lex := transitive-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST.LOCAL.CAT.HEAD [ CASE nom,
                                                       CASE-MARKED + ],
                           COMPS.FIRST [ LOCAL.CAT.HEAD [ CASE com,
                                                          CASE-MARKED + ],
                                         OPT + ] ] ].

no-obj-drop-verb-lex := transitive-verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.OPT - ].

obj-drop-verb-lex := transitive-verb-lex.

;;; Auxiliaries

subj-raise-aux := aux-lex & trans-first-arg-raising-lex-item &
  [ SYNSEM.LOCAL [ CAT.VAL [ SPR < >,
                             SPEC < >,
                             COMPS < #comps >,
                             SUBJ < #subj > ],
                   CONT.HOOK.XARG #xarg ],
    ARG-ST < #subj &
             [ LOCAL [ CAT [ HEAD noun &
                                  [ CASE nom ],
                             VAL [ SUBJ < >,
                                   SPR < >,
                                   SPEC < >,
                                   COMPS < > ] ],
                       CONT.HOOK.INDEX #xarg ] ],
             #comps &
             [ LOCAL.CAT [ VAL [ SUBJ < unexpressed >,
                                 COMPS < >,
                                 SPR < >,
                                 SPEC < > ],
                           HEAD verb ] ] > ].

; To keep the semantically empty ones from spinning on
; generation, require complement to be [AUX -].  The
; FORM feature might be enough in the starter grammars,
; but I don't want to rely on this.  Then again, [ AUX - ]
; might not be true.

subj-raise-aux-no-pred := subj-raise-aux & raise-sem-lex-item &
  [ ARG-ST < [ ],
             [ LOCAL.CAT.HEAD.AUX - ] > ].

interrogative-aux-lex := subj-raise-aux-no-pred &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD.FORM nonfinite ].

;;; Copulas

cop-lex := basic-verb-lex-super & trans-first-arg-raising-lex-item-2 & agreement-copula-rule-dtr & tense-copula-rule-dtr &
  [ SYNSEM.LOCAL [ CAT.VAL [ SUBJ < [ LOCAL [ CONT.HOOK.INDEX #xarg,
                                              CAT [ VAL [ SPR < >,
                                                          COMPS < > ],
                                                    HEAD noun ] ] ] >,
                             COMPS < [ LOCAL.CAT [ HEAD.PRD +,
                                                   VAL [ SUBJ < >,
                                                         COMPS < > ] ] ] >,
                             SPR < >,
                             SPEC < > ],
                   CONT.HOOK.XARG #xarg ],
    INFLECTED.NEG-COP-LEX-RULE-FLAG na-or-- ].

; Copula type taking adjectival complements.
; Need to define more for additional complement types.

adj-comp-copula-verb-lex := cop-lex &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.LOCAL.CAT.HEAD adj ].

positive-copula-cop-lex := adj-comp-copula-verb-lex & aspect-copula-rule-dtr &
  [ INFLECTED [ POLARITY-COPULA-FLAG -,
                TENSE-COPULA-FLAG -,
                ASPECT-COPULA-FLAG -,
                AGREEMENT-COPULA-FLAG - ] ].

negative-copula-cop-lex := adj-comp-copula-verb-lex &
  [ INFLECTED [ TENSE-COPULA-FLAG -,
                AGREEMENT-COPULA-FLAG - ] ].

;;; Adjectives

adj-lex := basic-intersective-adjective-lex & agreement-adjective-rule-dtr & tense-adjective-rule-dtr.

basic-adjective-adj-lex := adj-lex &
  [ INFLECTED [ AGREEMENT-ADJECTIVE-FLAG -,
                TENSE-ADJECTIVE-FLAG -,
                BASIC-ADJECTIVE_OPT_COP-FLAG - ] ].

;;; Others

;;; Case-marking adpositions
;;; Case marking adpositions are constrained not to
;;; be modifiers.

case-marking-adp-lex := basic-one-arg & raise-sem-lex-item &
  [ SYNSEM.LOCAL.CAT [ HEAD adp &
                            [ CASE #case,
                              MOD < > ],
                       VAL [ SPR < >,
                             SUBJ < >,
                             COMPS < #comps >,
                             SPEC < > ] ],
    ARG-ST < #comps &
             [ LOCAL.CAT [ VAL.SPR < >,
                           HEAD noun &
                                [ CASE #case,
                                  CASE-MARKED - ] ] ] > ].

;;; Determiners

determiner-lex-supertype := norm-hook-lex-item & 
                            basic-zero-arg & 
                            no-icons-lex-item &
  [ SYNSEM [ LOCAL [ CAT [ HEAD det & [ MOD < > ],
			   VAL [ SPEC.FIRST.LOCAL.CONT.HOOK [ INDEX #ind,
                                                  LTOP #larg ],
                                SPR < >,
                                SUBJ < >,
                                COMPS < >] ],
		     CONT.HCONS < ! qeq &
				 [ HARG #harg,
				   LARG #larg ] ! > ], 
	     LKEYS.KEYREL quant-relation &
		   [ ARG0 #ind,
		     RSTR #harg ] ] ].

;;; Demonstrative determiners

demonstrative-determiner-lex := determiner-lex-supertype & 
  [ SYNSEM 
     [ LKEYS.ALTKEYREL #evrel,
       LOCAL [ CAT.VAL.SPEC.FIRST.LOCAL.CONT.HOOK [ INDEX #ind & [ COG-ST activ+fam, 
                                                                   SPECI + ],
                                                    LTOP #ltop ],
               CONT.RELS <! [ PRED "exist_q_rel" ],
                            #evrel & arg1-ev-relation & [ LBL #ltop, 
                                                          ARG1 #ind ] !> ] ] ].

;;; Ordinary determiners

ordinary-determiner-lex := determiner-lex-supertype & single-rel-lex-item.

definite-determiner-lex := ordinary-determiner-lex & 
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX [ COG-ST uniq+fam+act, SPECI + ] ].

indefinite-determiner-lex := ordinary-determiner-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.COG-ST type-id ].

sgpl-definite-determiner-lex := definite-determiner-lex.

pl-definite-determiner-lex := definite-determiner-lex &
  [ SYNSEM.LOCAL.CAT.VAL.SPEC.FIRST.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl ].

sg-indefinite-determiner-lex := indefinite-determiner-lex &
  [ SYNSEM.LOCAL.CAT.VAL.SPEC.FIRST.LOCAL.CONT.HOOK.INDEX.PNG.NUM sg ].

pl-indefinite-determiner-lex := indefinite-determiner-lex &
  [ SYNSEM.LOCAL.CAT.VAL.SPEC.FIRST.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl ].

;;; Adverbs

;  [ SYNSEM [ LOCAL [ CAT [ HEAD.MOD < [ LOCAL.CAT [ HEAD verb, 
;                                                    VAL.COMPS < > ] ]>,
adverb-lex := basic-adverb-lex & intersective-mod-lex &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.MOD < [ LOCAL.CAT.HEAD verb ]>,
			   VAL [ SPR < >,
				 SUBJ < >,
				 COMPS < >,
				 SPEC < > ]]]]].

;manner-adverb-adv-lex := adverb-lex.
manner-adverb-adv-lex := adverb-lex &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD < [ LOCAL.CAT.VAL.COMPS < > ] > ].

;;;;;;;;;;;;;;;;;;;
;;; Lexical Rules
;;;;;;;;;;;;;;;;;;;

; Basic attributive adjective lexical rule definition

attr-adj-lex-rule := add-only-no-ccont-rule &
  [ SYNSEM.LOCAL [ CAT.HEAD.MOD < [ LOCAL intersective-mod &
                                          [ CONT.HOOK.INDEX #xarg,
                                            CAT [ HEAD noun,
                                                  VAL.SPR cons ] ] ] >,
                   CONT.HOOK.XARG #xarg ] ].

; Stative predicate adjective lexical rule definition

stative-pred-lex-rule := add-only-no-ccont-rule &
  [ SYNSEM.LOCAL [ CAT.VAL.SUBJ < [ LOCAL [ CONT.HOOK.INDEX #xarg,
                                            CAT [ VAL [ SPR < >,
                                                        COMPS < > ],
                                                  HEAD noun ] ] ] >,
                   CONT.HOOK.XARG #xarg ] ].

;;; Intermediate rule types

tense-verb-rule-dtr := word-or-lexrule.
agreement-adjective-rule-dtr := word-or-lexrule.
tense-copula-rule-dtr := word-or-lexrule.
aspect-copula-rule-dtr := word-or-lexrule.
agreement-verb-rule-dtr := word-or-lexrule.
agreement-copula-rule-dtr := word-or-lexrule.
polarity-verb-rule-dtr := word-or-lexrule.
poss-common-noun-rule-dtr := word-or-lexrule.
aspect-verb-rule-dtr := word-or-lexrule.
tense-adjective-rule-dtr := word-or-lexrule.
case-common-noun-rule-dtr := word-or-lexrule.

;;; Lexical rule types

number-common-noun-lex-rule-super := add-only-no-ccont-rule & case-common-noun-rule-dtr & poss-common-noun-rule-dtr &
  [ INFLECTED [ NUMBER-COMMON-NOUN-FLAG +,
                NEG-LEX-RULE-FLAG #neg-lex-rule,
                BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                TENSE-VERB-FLAG #tense-verb,
                AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                ASPECT-VERB-FLAG #aspect-verb,
                AGREEMENT-VERB-FLAG #agreement-verb,
                CASE-COMMON-NOUN-FLAG #case-common-noun,
                POSS-FLAG #poss,
                TENSE-ADJECTIVE-FLAG #tense-adjective,
                POLARITY-VERB-FLAG #polarity-verb,
                AGREEMENT-COPULA-FLAG #agreement-copula,
                POLARITY-COPULA-FLAG #polarity-copula,
                TENSE-COPULA-FLAG #tense-copula,
                NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                ASPECT-COPULA-FLAG #aspect-copula ],
    DTR common-noun-lex &
        [ INFLECTED [ NEG-LEX-RULE-FLAG #neg-lex-rule,
                      BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                      TENSE-VERB-FLAG #tense-verb,
                      AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                      ASPECT-VERB-FLAG #aspect-verb,
                      AGREEMENT-VERB-FLAG #agreement-verb,
                      CASE-COMMON-NOUN-FLAG #case-common-noun,
                      POSS-FLAG #poss,
                      TENSE-ADJECTIVE-FLAG #tense-adjective,
                      POLARITY-VERB-FLAG #polarity-verb,
                      AGREEMENT-COPULA-FLAG #agreement-copula,
                      POLARITY-COPULA-FLAG #polarity-copula,
                      TENSE-COPULA-FLAG #tense-copula,
                      NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                      ASPECT-COPULA-FLAG #aspect-copula ] ] ].

sg-lex-rule-lex-rule := const-lex-rule & number-common-noun-lex-rule-super &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM sg ].

pl-lex-rule-lex-rule := infl-lex-rule & number-common-noun-lex-rule-super &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl ].

;TODO

;poss-common-noun-lex-rule-super := add-only-no-ccont-rule & case-common-noun-rule-dtr & infl-lex-rule &
;  [ INFLECTED #infl,
;    DTR poss-common-noun-rule-dtr &
;        [ INFLECTED #infl ] ].

;poss-common-noun-lex-rule-super := add-only-no-ccont-rule & 
;                                   case-common-noun-rule-dtr & 
;                                   infl-lex-rule &
poss-common-noun-lex-rule-super := infl-add-only-lex-rule & case-common-noun-rule-dtr & 
  [ INFLECTED [ POSS-FLAG +,
                CASE-COMMON-NOUN-FLAG #case-common-noun,
                NEG-LEX-RULE-FLAG #neg-lex-rule,
                TENSE-ADJECTIVE-FLAG #tense-adjective,
                BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                TENSE-VERB-FLAG #tense-verb,
                AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                ASPECT-VERB-FLAG #aspect-verb,
                AGREEMENT-VERB-FLAG #agreement-verb,
                NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                POLARITY-VERB-FLAG #polarity-verb,
                AGREEMENT-COPULA-FLAG #agreement-copula,
                POLARITY-COPULA-FLAG #polarity-copula,
                TENSE-COPULA-FLAG #tense-copula,
                NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                ASPECT-COPULA-FLAG #aspect-copula ],
   SYNSEM.LKEYS.ALTKEYREL #altkeyrel,
   DTR poss-common-noun-rule-dtr & [ SYNSEM.LOCAL [ CONT.HOOK [ INDEX #index,  
						                                        LTOP #lbl ] ],
       INFLECTED [ CASE-COMMON-NOUN-FLAG #case-common-noun,
                   NEG-LEX-RULE-FLAG #neg-lex-rule,
                   TENSE-ADJECTIVE-FLAG #tense-adjective,
                   BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                   TENSE-VERB-FLAG #tense-verb,
                   AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                   ASPECT-VERB-FLAG #aspect-verb,
                   AGREEMENT-VERB-FLAG #agreement-verb,
                   NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                   POLARITY-VERB-FLAG #polarity-verb,
                   AGREEMENT-COPULA-FLAG #agreement-copula,
                   POLARITY-COPULA-FLAG #polarity-copula,
                   TENSE-COPULA-FLAG #tense-copula,
                   NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                   ASPECT-COPULA-FLAG #aspect-copula ] ],
   C-CONT [ HOOK [ INDEX #index, 
		   LTOP #lbl ],
	    RELS < ! arg12-ev-relation &
		  [ PRED "poss_rel",
		    LBL #lbl,
		    ARG1 #index,
		    ARG2 #arg2 ],
		  quant-relation &
		  [ PRED "exist_q_rel",
		    ARG0 #arg2,				 
		    RSTR #harg ],			
		  #altkeyrel & noun-relation &			
		  [ PRED "pron_rel",			 
		    LBL #lbl2,			 
		    ARG0 #arg2 & [ COG-ST activ-or-more,			       
				   SPECI + ] ] ! >,		  
	    HCONS < ! qeq & [ HARG #harg,				   
			     LARG #lbl2 ] ! >,		  
	    ICONS < ! ! > ] ].

1sg-poss-lex-rule-lex-rule := poss-common-noun-lex-rule-super & 
  [ SYNSEM.LKEYS.ALTKEYREL.ARG0.PNG [ PER 1st, NUM sg ] ].

1pl-poss-lex-rule-lex-rule := poss-common-noun-lex-rule-super & 
  [ SYNSEM.LKEYS.ALTKEYREL.ARG0.PNG [ PER 1st, NUM pl ] ].

2sg-poss-lex-rule-lex-rule := poss-common-noun-lex-rule-super & 
  [ SYNSEM.LKEYS.ALTKEYREL.ARG0.PNG [ PER 2nd, NUM sg ] ].

2pl-poss-lex-rule-lex-rule := poss-common-noun-lex-rule-super & 
  [ SYNSEM.LKEYS.ALTKEYREL.ARG0.PNG [ PER 2nd, NUM pl ] ].

3sgpl-poss-lex-rule-lex-rule := poss-common-noun-lex-rule-super & 
  [ SYNSEM.LKEYS.ALTKEYREL.ARG0.PNG [ PER 3rd ] ].

3pl-poss-lex-rule-lex-rule := poss-common-noun-lex-rule-super & 
  [ SYNSEM.LKEYS.ALTKEYREL.ARG0.PNG [ PER 3rd, NUM pl ] ].

case-common-noun-lex-rule-super := add-only-no-ccont-rule &
  [ INFLECTED [ CASE-COMMON-NOUN-FLAG +,
                NEG-LEX-RULE-FLAG #neg-lex-rule,
                POSS-FLAG #poss,
                TENSE-ADJECTIVE-FLAG #tense-adjective,
                BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                TENSE-VERB-FLAG #tense-verb,
                AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                ASPECT-VERB-FLAG #aspect-verb,
                AGREEMENT-VERB-FLAG #agreement-verb,
                NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                POLARITY-VERB-FLAG #polarity-verb,
                AGREEMENT-COPULA-FLAG #agreement-copula,
                POLARITY-COPULA-FLAG #polarity-copula,
                TENSE-COPULA-FLAG #tense-copula,
                NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                ASPECT-COPULA-FLAG #aspect-copula ],
    DTR case-common-noun-rule-dtr &
        [ INFLECTED [ NEG-LEX-RULE-FLAG #neg-lex-rule,
                      POSS-FLAG #poss,
                      TENSE-ADJECTIVE-FLAG #tense-adjective,
                      BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                      TENSE-VERB-FLAG #tense-verb,
                      AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                      ASPECT-VERB-FLAG #aspect-verb,
                      AGREEMENT-VERB-FLAG #agreement-verb,
                      NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                      POLARITY-VERB-FLAG #polarity-verb,
                      AGREEMENT-COPULA-FLAG #agreement-copula,
                      POLARITY-COPULA-FLAG #polarity-copula,
                      TENSE-COPULA-FLAG #tense-copula,
                      NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                      ASPECT-COPULA-FLAG #aspect-copula ] ] ].

nom-lex-rule-lex-rule := case-common-noun-lex-rule-super & const-lex-rule &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE nom,
                            CASE-MARKED + ] ].

spec-acc-lex-rule-lex-rule := case-common-noun-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL [ CAT.HEAD [ CASE acc,
                              CASE-MARKED + ],
                   CONT.HOOK.INDEX.SPECI + ] ].

nonspec-acc-lex-rule-lex-rule := case-common-noun-lex-rule-super & const-lex-rule &
  [ SYNSEM.LOCAL [ CAT.HEAD [ CASE acc,
                              CASE-MARKED + ],
                   CONT.HOOK.INDEX.SPECI - ] ].

dat-lex-rule-lex-rule := case-common-noun-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE dat,
                            CASE-MARKED + ] ].

abl-lex-rule-lex-rule := case-common-noun-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE abl,
                            CASE-MARKED + ] ].

gen-lex-rule-lex-rule := case-common-noun-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE gen,
                            CASE-MARKED + ] ].

loc-lex-rule-lex-rule := case-common-noun-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE loc,
                            CASE-MARKED + ] ].

com-lex-rule-lex-rule := case-common-noun-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE com,
                            CASE-MARKED + ] ].

case-common-noun-synth-com-lex-rule := case-common-noun-lex-rule-super & const-lex-rule &
  [ SYNSEM.LOCAL.CAT.HEAD [ CASE com,
                            CASE-MARKED - ] ].

polarity-verb-lex-rule-super := agreement-verb-rule-dtr & aspect-verb-rule-dtr & lex-rule & tense-verb-rule-dtr &
  [ INFLECTED [ POLARITY-VERB-FLAG +,
                TENSE-ADJECTIVE-FLAG #tense-adjective,
                BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                TENSE-VERB-FLAG #tense-verb,
                AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                ASPECT-VERB-FLAG #aspect-verb,
                AGREEMENT-VERB-FLAG #agreement-verb,
                CASE-COMMON-NOUN-FLAG #case-common-noun,
                POSS-FLAG #poss,
                NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                AGREEMENT-COPULA-FLAG #agreement-copula,
                POLARITY-COPULA-FLAG #polarity-copula,
                TENSE-COPULA-FLAG #tense-copula,
                NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                ASPECT-COPULA-FLAG #aspect-copula ],
    DTR polarity-verb-rule-dtr &
        [ INFLECTED [ TENSE-ADJECTIVE-FLAG #tense-adjective,
                      BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                      TENSE-VERB-FLAG #tense-verb,
                      AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                      ASPECT-VERB-FLAG #aspect-verb,
                      AGREEMENT-VERB-FLAG #agreement-verb,
                      CASE-COMMON-NOUN-FLAG #case-common-noun,
                      POSS-FLAG #poss,
                      NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                      AGREEMENT-COPULA-FLAG #agreement-copula,
                      POLARITY-COPULA-FLAG #polarity-copula,
                      TENSE-COPULA-FLAG #tense-copula,
                      NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                      ASPECT-COPULA-FLAG #aspect-copula ] ] ].

; This adds negative semantics to the verb's
; RELS list.

neg-lex-rule-lex-rule := cont-change-only-lex-rule & infl-lex-rule & polarity-verb-lex-rule-super &
  [ INFLECTED.NEG-LEX-RULE-FLAG +,
    C-CONT [ HOOK [ XARG #xarg,
                    LTOP #ltop,
                    INDEX #ind ],
             RELS <! event-relation &
                     [ PRED "neg_rel",
                       LBL #ltop,
                       ARG1 #harg ] !>,
             HCONS <! qeq &
                      [ HARG #harg,
                        LARG #larg ] !> ],
    SYNSEM.LKEYS #lkeys,
    DTR.SYNSEM [ LKEYS #lkeys,
                 LOCAL [ CONT.HOOK [ XARG #xarg,
                                     INDEX #ind,
                                     LTOP #larg ],
                         CAT.HEAD verb ] ] ].

pos-lex-rule-lex-rule := add-only-no-ccont-rule & const-lex-rule & polarity-verb-lex-rule-super &
  [ INFLECTED.NEG-LEX-RULE-FLAG #neg-lex-rule,
    DTR.INFLECTED.NEG-LEX-RULE-FLAG #neg-lex-rule ].

aspect-verb-lex-rule-super := add-only-no-ccont-rule & agreement-verb-rule-dtr & tense-verb-rule-dtr &
  [ INFLECTED [ ASPECT-VERB-FLAG +,
                NEG-LEX-RULE-FLAG #neg-lex-rule,
                TENSE-ADJECTIVE-FLAG #tense-adjective,
                BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                TENSE-VERB-FLAG #tense-verb,
                AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                AGREEMENT-COPULA-FLAG #agreement-copula,
                AGREEMENT-VERB-FLAG #agreement-verb,
                CASE-COMMON-NOUN-FLAG #case-common-noun,
                POSS-FLAG #poss,
                NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                POLARITY-VERB-FLAG #polarity-verb,
                POLARITY-COPULA-FLAG #polarity-copula,
                TENSE-COPULA-FLAG #tense-copula,
                NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                ASPECT-COPULA-FLAG #aspect-copula ],
    DTR aspect-verb-rule-dtr &
        [ INFLECTED [ NEG-LEX-RULE-FLAG #neg-lex-rule,
                      TENSE-ADJECTIVE-FLAG #tense-adjective,
                      BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                      TENSE-VERB-FLAG #tense-verb,
                      AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                      AGREEMENT-COPULA-FLAG #agreement-copula,
                      AGREEMENT-VERB-FLAG #agreement-verb,
                      CASE-COMMON-NOUN-FLAG #case-common-noun,
                      POSS-FLAG #poss,
                      NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                      POLARITY-VERB-FLAG #polarity-verb,
                      POLARITY-COPULA-FLAG #polarity-copula,
                      TENSE-COPULA-FLAG #tense-copula,
                      NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                      ASPECT-COPULA-FLAG #aspect-copula ] ] ].

neg-hab-lex-rule-lex-rule := aspect-verb-lex-rule-super & const-lex-rule &
  [ DTR.INFLECTED.NEG-LEX-RULE-FLAG +,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.E.ASPECT habitual ].

impf-lex-rule-lex-rule := aspect-verb-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.ASPECT imperfective ].

pf-lex-rule-lex-rule := aspect-verb-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.ASPECT perfective ].

hab-lex-rule-lex-rule := aspect-verb-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.ASPECT habitual ].

prsp-lex-rule-lex-rule := aspect-verb-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.ASPECT prospective ].

tense-verb-lex-rule-super := add-only-no-ccont-rule &
  [ INFLECTED [ TENSE-VERB-FLAG +,
                NEG-LEX-RULE-FLAG #neg-lex-rule,
                TENSE-ADJECTIVE-FLAG #tense-adjective,
                BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                ASPECT-COPULA-FLAG #aspect-copula,
                AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                ASPECT-VERB-FLAG #aspect-verb,
                AGREEMENT-VERB-FLAG #agreement-verb,
                CASE-COMMON-NOUN-FLAG #case-common-noun,
                POSS-FLAG #poss,
                NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                POLARITY-VERB-FLAG #polarity-verb,
                AGREEMENT-COPULA-FLAG #agreement-copula,
                POLARITY-COPULA-FLAG #polarity-copula,
                TENSE-COPULA-FLAG #tense-copula,
                NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule ],
    DTR tense-verb-rule-dtr &
        [ INFLECTED [ NEG-LEX-RULE-FLAG #neg-lex-rule,
                      TENSE-ADJECTIVE-FLAG #tense-adjective,
                      BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                      ASPECT-COPULA-FLAG #aspect-copula,
                      AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                      ASPECT-VERB-FLAG #aspect-verb,
                      AGREEMENT-VERB-FLAG #agreement-verb,
                      CASE-COMMON-NOUN-FLAG #case-common-noun,
                      POSS-FLAG #poss,
                      NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                      POLARITY-VERB-FLAG #polarity-verb,
                      AGREEMENT-COPULA-FLAG #agreement-copula,
                      POLARITY-COPULA-FLAG #polarity-copula,
                      TENSE-COPULA-FLAG #tense-copula,
                      NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule ] ] ].

npst-lex-rule-lex-rule := const-lex-rule & no-aux-lex-rule-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.TENSE nonpast ].

pst-lex-rule-lex-rule := infl-lex-rule & no-aux-lex-rule-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.TENSE past ].

pre-aux-lex-rule-lex-rule := const-lex-rule & tense-verb-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.FORM nonfinite ].

no-aux-lex-rule-lex-rule := agreement-verb-rule-dtr & tense-verb-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.FORM finite ].

agreement-verb-lex-rule-super := add-only-no-ccont-rule &
  [ INFLECTED [ AGREEMENT-VERB-FLAG +,
                NEG-LEX-RULE-FLAG #neg-lex-rule,
                TENSE-ADJECTIVE-FLAG #tense-adjective,
                BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                TENSE-VERB-FLAG #tense-verb,
                AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                ASPECT-VERB-FLAG #aspect-verb,
                CASE-COMMON-NOUN-FLAG #case-common-noun,
                POSS-FLAG #poss,
                NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                POLARITY-VERB-FLAG #polarity-verb,
                AGREEMENT-COPULA-FLAG #agreement-copula,
                POLARITY-COPULA-FLAG #polarity-copula,
                TENSE-COPULA-FLAG #tense-copula,
                NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                ASPECT-COPULA-FLAG #aspect-copula ],
    DTR agreement-verb-rule-dtr &
        [ INFLECTED [ NEG-LEX-RULE-FLAG #neg-lex-rule,
                      TENSE-ADJECTIVE-FLAG #tense-adjective,
                      BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                      TENSE-VERB-FLAG #tense-verb,
                      AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                      ASPECT-VERB-FLAG #aspect-verb,
                      CASE-COMMON-NOUN-FLAG #case-common-noun,
                      POSS-FLAG #poss,
                      NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                      POLARITY-VERB-FLAG #polarity-verb,
                      AGREEMENT-COPULA-FLAG #agreement-copula,
                      POLARITY-COPULA-FLAG #polarity-copula,
                      TENSE-COPULA-FLAG #tense-copula,
                      NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                      ASPECT-COPULA-FLAG #aspect-copula ] ] ].

1sg-lex-rule-lex-rule := agreement-verb-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG [ PER 1st,
                                                                NUM sg ] ].

1pl-lex-rule-lex-rule := agreement-verb-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG [ PER 1st,
                                                                NUM pl ] ].

2sg-lex-rule-lex-rule := agreement-verb-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG [ PER 2nd,
                                                                NUM sg ] ].

2pl-lex-rule-lex-rule := agreement-verb-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG [ PER 2nd,
                                                                NUM pl ] ].

3sgpl-lex-rule-lex-rule := agreement-verb-lex-rule-super & const-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG.PER 3rd ].

3pl-lex-rule-lex-rule := agreement-verb-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG [ PER 3rd,
                                                                NUM pl ] ].

basic-adjective_opt_cop-lex-rule-super := add-only-no-ccont-rule & agreement-adjective-rule-dtr & const-lex-rule & tense-adjective-rule-dtr &
  [ INFLECTED [ BASIC-ADJECTIVE_OPT_COP-FLAG +,
                NEG-LEX-RULE-FLAG #neg-lex-rule,
                TENSE-ADJECTIVE-FLAG #tense-adjective,
                TENSE-VERB-FLAG #tense-verb,
                AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                ASPECT-VERB-FLAG #aspect-verb,
                AGREEMENT-VERB-FLAG #agreement-verb,
                CASE-COMMON-NOUN-FLAG #case-common-noun,
                POSS-FLAG #poss,
                NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                POLARITY-VERB-FLAG #polarity-verb,
                AGREEMENT-COPULA-FLAG #agreement-copula,
                POLARITY-COPULA-FLAG #polarity-copula,
                TENSE-COPULA-FLAG #tense-copula,
                NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                ASPECT-COPULA-FLAG #aspect-copula ],
    DTR basic-adjective-adj-lex &
        [ INFLECTED [ NEG-LEX-RULE-FLAG #neg-lex-rule,
                      TENSE-ADJECTIVE-FLAG #tense-adjective,
                      TENSE-VERB-FLAG #tense-verb,
                      AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                      ASPECT-VERB-FLAG #aspect-verb,
                      AGREEMENT-VERB-FLAG #agreement-verb,
                      CASE-COMMON-NOUN-FLAG #case-common-noun,
                      POSS-FLAG #poss,
                      NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                      POLARITY-VERB-FLAG #polarity-verb,
                      AGREEMENT-COPULA-FLAG #agreement-copula,
                      POLARITY-COPULA-FLAG #polarity-copula,
                      TENSE-COPULA-FLAG #tense-copula,
                      NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                      ASPECT-COPULA-FLAG #aspect-copula ] ] ].

basic-adjective_adj_comp-lex-rule := basic-adjective_opt_cop-lex-rule-super & stative-pred-lex-rule &
  [ SYNSEM.LOCAL.CAT.HEAD [ MOD < >,
                            PRD - ] ].

basic-adjective_stative_pred-lex-rule := basic-adjective_opt_cop-lex-rule-super & stative-pred-lex-rule &
  [ SYNSEM.LOCAL.CAT.HEAD [ MOD < >,
                            PRD - ] ].

basic-adjective_attr-lex-rule := attr-adj-lex-rule & basic-adjective_opt_cop-lex-rule-super &
  [ SYNSEM.LOCAL.CAT [ VAL.SUBJ < >,
                       HEAD.PRD -,
                       POSTHEAD - ] ].

tense-adjective-lex-rule-super := add-only-no-ccont-rule &
  [ INFLECTED [ TENSE-ADJECTIVE-FLAG +,
                NEG-LEX-RULE-FLAG #neg-lex-rule,
                BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                TENSE-VERB-FLAG #tense-verb,
                AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                ASPECT-VERB-FLAG #aspect-verb,
                AGREEMENT-VERB-FLAG #agreement-verb,
                CASE-COMMON-NOUN-FLAG #case-common-noun,
                POSS-FLAG #poss,
                NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                POLARITY-VERB-FLAG #polarity-verb,
                AGREEMENT-COPULA-FLAG #agreement-copula,
                POLARITY-COPULA-FLAG #polarity-copula,
                TENSE-COPULA-FLAG #tense-copula,
                NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                ASPECT-COPULA-FLAG #aspect-copula ],
    DTR tense-adjective-rule-dtr &
        [ INFLECTED [ NEG-LEX-RULE-FLAG #neg-lex-rule,
                      BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                      TENSE-VERB-FLAG #tense-verb,
                      AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                      ASPECT-VERB-FLAG #aspect-verb,
                      AGREEMENT-VERB-FLAG #agreement-verb,
                      CASE-COMMON-NOUN-FLAG #case-common-noun,
                      POSS-FLAG #poss,
                      NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                      POLARITY-VERB-FLAG #polarity-verb,
                      AGREEMENT-COPULA-FLAG #agreement-copula,
                      POLARITY-COPULA-FLAG #polarity-copula,
                      TENSE-COPULA-FLAG #tense-copula,
                      NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                      ASPECT-COPULA-FLAG #aspect-copula ] ] ].

npst-adj-lex-rule-lex-rule := const-lex-rule & no-aux-adj-lex-rule-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.TENSE nonpast ].

pst-adj-lex-rule-lex-rule := infl-lex-rule & no-aux-adj-lex-rule-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.TENSE past ].

pre-aux-adj-lex-rule-lex-rule := const-lex-rule & tense-adjective-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.FORM nonfinite ].

no-aux-adj-lex-rule-lex-rule := agreement-adjective-rule-dtr & tense-adjective-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.FORM finite ].

agreement-adjective-lex-rule-super := add-only-no-ccont-rule &
  [ INFLECTED [ AGREEMENT-ADJECTIVE-FLAG +,
                NEG-LEX-RULE-FLAG #neg-lex-rule,
                TENSE-ADJECTIVE-FLAG #tense-adjective,
                BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                TENSE-VERB-FLAG #tense-verb,
                ASPECT-VERB-FLAG #aspect-verb,
                AGREEMENT-VERB-FLAG #agreement-verb,
                CASE-COMMON-NOUN-FLAG #case-common-noun,
                POSS-FLAG #poss,
                NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                POLARITY-VERB-FLAG #polarity-verb,
                AGREEMENT-COPULA-FLAG #agreement-copula,
                POLARITY-COPULA-FLAG #polarity-copula,
                TENSE-COPULA-FLAG #tense-copula,
                NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                ASPECT-COPULA-FLAG #aspect-copula ],
    DTR agreement-adjective-rule-dtr &
        [ INFLECTED [ NEG-LEX-RULE-FLAG #neg-lex-rule,
                      TENSE-ADJECTIVE-FLAG #tense-adjective,
                      BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                      TENSE-VERB-FLAG #tense-verb,
                      ASPECT-VERB-FLAG #aspect-verb,
                      AGREEMENT-VERB-FLAG #agreement-verb,
                      CASE-COMMON-NOUN-FLAG #case-common-noun,
                      POSS-FLAG #poss,
                      NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                      POLARITY-VERB-FLAG #polarity-verb,
                      AGREEMENT-COPULA-FLAG #agreement-copula,
                      POLARITY-COPULA-FLAG #polarity-copula,
                      TENSE-COPULA-FLAG #tense-copula,
                      NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                      ASPECT-COPULA-FLAG #aspect-copula ] ] ].

1sg-adj-lex-rule-lex-rule := agreement-adjective-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.XARG.PNG [ PER 1st,
                                      NUM sg ] ].

1pl-adj-lex-rule-lex-rule := agreement-adjective-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.XARG.PNG [ PER 1st,
                                      NUM pl ] ].

2sg-adj-lex-rule-lex-rule := agreement-adjective-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.XARG.PNG [ PER 2nd,
                                      NUM sg ] ].

2pl-adj-lex-rule-lex-rule := agreement-adjective-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.XARG.PNG [ PER 2nd,
                                      NUM pl ] ].

3sgpl-adj-lex-rule-lex-rule := agreement-adjective-lex-rule-super & const-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.XARG.PNG.PER 3rd ].

3pl-adj-lex-rule-lex-rule := agreement-adjective-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.XARG.PNG [ PER 3rd,
                                      NUM pl ] ].

polarity-copula-lex-rule-super := add-only-no-ccont-rule & agreement-copula-rule-dtr & aspect-copula-rule-dtr & tense-copula-rule-dtr &
  [ INFLECTED [ POLARITY-COPULA-FLAG +,
                NEG-LEX-RULE-FLAG #neg-lex-rule,
                TENSE-ADJECTIVE-FLAG #tense-adjective,
                BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                TENSE-VERB-FLAG #tense-verb,
                AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                ASPECT-VERB-FLAG #aspect-verb,
                AGREEMENT-VERB-FLAG #agreement-verb,
                NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                POLARITY-VERB-FLAG #polarity-verb,
                AGREEMENT-COPULA-FLAG #agreement-copula,
                TENSE-COPULA-FLAG #tense-copula,
                ASPECT-COPULA-FLAG #aspect-copula,
                POSS-FLAG #poss,
                CASE-COMMON-NOUN-FLAG #case-common-noun ],
    DTR positive-copula-cop-lex &
        [ INFLECTED [ NEG-LEX-RULE-FLAG #neg-lex-rule,
                      TENSE-ADJECTIVE-FLAG #tense-adjective,
                      BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                      TENSE-VERB-FLAG #tense-verb,
                      AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                      ASPECT-VERB-FLAG #aspect-verb,
                      AGREEMENT-VERB-FLAG #agreement-verb,
                      NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                      POLARITY-VERB-FLAG #polarity-verb,
                      AGREEMENT-COPULA-FLAG #agreement-copula,
                      TENSE-COPULA-FLAG #tense-copula,
                      ASPECT-COPULA-FLAG #aspect-copula,
                      POSS-FLAG #poss,
                      CASE-COMMON-NOUN-FLAG #case-common-noun ] ] ].

neg-cop-lex-rule-lex-rule := infl-lex-rule & polarity-copula-lex-rule-super &
  [ INFLECTED.NEG-COP-LEX-RULE-FLAG + ].

pos-cop-lex-rule-lex-rule := const-lex-rule & polarity-copula-lex-rule-super &
  [ INFLECTED.NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
    DTR.INFLECTED.NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule ].

aspect-copula-lex-rule-super := add-only-no-ccont-rule & agreement-copula-rule-dtr & tense-copula-rule-dtr &
  [ INFLECTED [ ASPECT-COPULA-FLAG +,
                NEG-LEX-RULE-FLAG #neg-lex-rule,
                TENSE-ADJECTIVE-FLAG #tense-adjective,
                BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                TENSE-VERB-FLAG #tense-verb,
                AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                ASPECT-VERB-FLAG #aspect-verb,
                AGREEMENT-VERB-FLAG #agreement-verb,
                CASE-COMMON-NOUN-FLAG #case-common-noun,
                POSS-FLAG #poss,
                NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                POLARITY-VERB-FLAG #polarity-verb,
                AGREEMENT-COPULA-FLAG #agreement-copula,
                POLARITY-COPULA-FLAG #polarity-copula,
                TENSE-COPULA-FLAG #tense-copula,
                NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule ],
    DTR aspect-copula-rule-dtr &
        [ INFLECTED [ NEG-LEX-RULE-FLAG #neg-lex-rule,
                      TENSE-ADJECTIVE-FLAG #tense-adjective,
                      BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                      TENSE-VERB-FLAG #tense-verb,
                      AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                      ASPECT-VERB-FLAG #aspect-verb,
                      AGREEMENT-VERB-FLAG #agreement-verb,
                      CASE-COMMON-NOUN-FLAG #case-common-noun,
                      POSS-FLAG #poss,
                      NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                      POLARITY-VERB-FLAG #polarity-verb,
                      AGREEMENT-COPULA-FLAG #agreement-copula,
                      POLARITY-COPULA-FLAG #polarity-copula,
                      TENSE-COPULA-FLAG #tense-copula,
                      NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule ] ] ].

neg-hab-cop-lex-rule-lex-rule := aspect-copula-lex-rule-super & const-lex-rule &
  [ DTR.INFLECTED.NEG-COP-LEX-RULE-FLAG +,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.E.ASPECT habitual ].

impf-cop-lex-rule-lex-rule := aspect-copula-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.ASPECT imperfective ].

pf-cop-lex-rule-lex-rule := aspect-copula-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.ASPECT perfective ].

hab-cop-lex-rule-lex-rule := aspect-copula-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.ASPECT habitual ].

prsp-cop-lex-rule-lex-rule := aspect-copula-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.ASPECT prospective ].

tense-copula-lex-rule-super := add-only-no-ccont-rule &
  [ INFLECTED [ TENSE-COPULA-FLAG +,
                NEG-LEX-RULE-FLAG #neg-lex-rule,
                TENSE-ADJECTIVE-FLAG #tense-adjective,
                BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                TENSE-VERB-FLAG #tense-verb,
                AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                ASPECT-VERB-FLAG #aspect-verb,
                AGREEMENT-VERB-FLAG #agreement-verb,
                CASE-COMMON-NOUN-FLAG #case-common-noun,
                POSS-FLAG #poss,
                NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                POLARITY-VERB-FLAG #polarity-verb,
                AGREEMENT-COPULA-FLAG #agreement-copula,
                POLARITY-COPULA-FLAG #polarity-copula,
                ASPECT-COPULA-FLAG #aspect-copula,
                NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule ],
    DTR tense-copula-rule-dtr &
        [ INFLECTED [ NEG-LEX-RULE-FLAG #neg-lex-rule,
                      TENSE-ADJECTIVE-FLAG #tense-adjective,
                      BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                      TENSE-VERB-FLAG #tense-verb,
                      AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                      ASPECT-VERB-FLAG #aspect-verb,
                      AGREEMENT-VERB-FLAG #agreement-verb,
                      CASE-COMMON-NOUN-FLAG #case-common-noun,
                      POSS-FLAG #poss,
                      NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                      POLARITY-VERB-FLAG #polarity-verb,
                      AGREEMENT-COPULA-FLAG #agreement-copula,
                      POLARITY-COPULA-FLAG #polarity-copula,
                      ASPECT-COPULA-FLAG #aspect-copula,
                      NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule ] ] ].

npst-cop-lex-rule-lex-rule := const-lex-rule & no-aux-cop-lex-rule-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.TENSE nonpast ].

pst-cop-lex-rule-lex-rule := infl-lex-rule & no-aux-cop-lex-rule-lex-rule &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.E.TENSE past ].

pre-aux-cop-lex-rule-lex-rule := const-lex-rule & tense-copula-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.FORM nonfinite ].

no-aux-cop-lex-rule-lex-rule := agreement-copula-rule-dtr & tense-copula-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.FORM finite ].

agreement-copula-lex-rule-super := add-only-no-ccont-rule &
  [ INFLECTED [ AGREEMENT-COPULA-FLAG +,
                NEG-LEX-RULE-FLAG #neg-lex-rule,
                TENSE-ADJECTIVE-FLAG #tense-adjective,
                BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                TENSE-VERB-FLAG #tense-verb,
                AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                ASPECT-VERB-FLAG #aspect-verb,
                AGREEMENT-VERB-FLAG #agreement-verb,
                CASE-COMMON-NOUN-FLAG #case-common-noun,
                POSS-FLAG #poss,
                NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                POLARITY-VERB-FLAG #polarity-verb,
                POLARITY-COPULA-FLAG #polarity-copula,
                TENSE-COPULA-FLAG #tense-copula,
                NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                ASPECT-COPULA-FLAG #aspect-copula ],
    DTR agreement-copula-rule-dtr &
        [ INFLECTED [ NEG-LEX-RULE-FLAG #neg-lex-rule,
                      TENSE-ADJECTIVE-FLAG #tense-adjective,
                      BASIC-ADJECTIVE_OPT_COP-FLAG #basic-adjective_opt_cop,
                      TENSE-VERB-FLAG #tense-verb,
                      AGREEMENT-ADJECTIVE-FLAG #agreement-adjective,
                      ASPECT-VERB-FLAG #aspect-verb,
                      AGREEMENT-VERB-FLAG #agreement-verb,
                      CASE-COMMON-NOUN-FLAG #case-common-noun,
                      POSS-FLAG #poss,
                      NUMBER-COMMON-NOUN-FLAG #number-common-noun,
                      POLARITY-VERB-FLAG #polarity-verb,
                      POLARITY-COPULA-FLAG #polarity-copula,
                      TENSE-COPULA-FLAG #tense-copula,
                      NEG-COP-LEX-RULE-FLAG #neg-cop-lex-rule,
                      ASPECT-COPULA-FLAG #aspect-copula ] ] ].

1sg-cop-lex-rule-lex-rule := agreement-copula-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG [ PER 1st,
                                                                NUM sg ] ].

1pl-cop-lex-rule-lex-rule := agreement-copula-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG [ PER 1st,
                                                                NUM pl ] ].

2sg-cop-lex-rule-lex-rule := agreement-copula-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG [ PER 2nd,
                                                                NUM sg ] ].

2pl-cop-lex-rule-lex-rule := agreement-copula-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG [ PER 2nd,
                                                                NUM pl ] ].

3sgpl-cop-lex-rule-lex-rule := agreement-copula-lex-rule-super & const-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG.PER 3rd ].

3pl-cop-lex-rule-lex-rule := agreement-copula-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX.PNG [ PER 3rd,
                                                                NUM pl ] ].

;;;;;;;;;;;;;;;;;;;
;;; Phrasal Types
;;;;;;;;;;;;;;;;;;;

;Constraint on MC used to be part of matrix.tdl
;;it applies to all wo implementations, except for v2

head-initial-head-nexus := head-initial &
  [ SYNSEM.ATTACH lmod,
    HEAD-DTR.SYNSEM.ATTACH notmod-or-lmod ].

head-final-head-nexus := head-final &
  [ SYNSEM.ATTACH rmod ].

head-subj-phrase := decl-head-subj-phrase & head-initial-head-nexus.

subj-head-phrase := decl-head-subj-phrase & head-final-head-nexus.

; The head of head-comp-phrase can't be: ['adp']

head-comp-phrase := basic-head-1st-comp-phrase & head-initial-head-nexus &
  [ SYNSEM.LOCAL.CAT.HEAD +nvjrcdmo &
                          [ AUX - ] ].

comp-head-phrase := basic-head-1st-comp-phrase & head-final-head-nexus.

head-comp-phrase-2 := basic-head-2nd-comp-phrase & head-initial-head-nexus.

comp-head-phrase-2 := basic-head-2nd-comp-phrase & head-final-head-nexus.

; Bare NP phrase.  Consider modifying the PRED value of the quantifier relation
; introduced to match the semantic effect of bare NPs in your language.

bare-np-phrase := basic-bare-np-phrase &
  [ C-CONT.RELS <! [ PRED "exist_q_rel" ] !> ].
;  [ C-CONT.RELS <! [ PRED "exist_q_rel" ] !>, 
;    SYNSEM.LOCAL.CONT.HOOK.INDEX.COG-ST activ-or-more ].

;;; TODO

;  [ HEAD-DTR personal-pronoun-lex ].
bare-pronoun-np-phrase := bare-np-phrase &
  [ HEAD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX [ COG-ST activ-or-more, 
                                            SPECI + ] ].
;;  [ HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.SPR.FIRST.OPT + ].

;  [ SYNSEM.LOCAL [ CAT.HEAD.MOD < [ LOCAL intersective-mod &
;                                          [ CONT.HOOK.INDEX #xarg,
;                                            CAT [ HEAD noun,
;                                                  VAL.SPR cons ] ] ] >,
;                   CONT.HOOK.XARG #xarg ] ].

;  [ HEAD-DTR common-noun-lex ].
bare-common-np-phrase := bare-np-phrase & 
  [ HEAD-DTR.SYNSEM.LOCAL.CAT [ HEAD noun, VAL.SPR cons ] ].
;  [ HEAD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.COG-ST uniq+fam+act,
;    SYNSEM.LOCAL.CONT.HOOK.INDEX.COG-ST uniq+fam+act ].
;;  [ HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.SPR.FIRST.OPT *top* ].

;;;;;;;;;;;;;;;;;;
;;; Coordination
;;;;;;;;;;;;;;;;;;

;;; Feature Resolution Rules

1st-any-1st-per-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 1st,
    LCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 1st ].

2nd-2nd-2nd-per-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 2nd,
    LCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 2nd,
    RCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 2nd ].

2nd-3rd-2nd-per-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 2nd,
    LCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 2nd,
    RCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 3rd ].

3rd-3rd-3rd-per-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 3rd,
    LCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 3rd,
    RCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 3rd ].

any-1st-1st-per-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 1st,
    RCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 1st ].

3rd-2nd-2nd-per-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 2nd,
    LCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 3rd,
    RCOORD-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.PER 2nd ].

any-any-pl-num-coord-rule := coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG.NUM pl ].

pass-up-png-coord-rule := bottom-coord-phrase &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG #png,
    NONCONJ-DTR.SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG #png ].

;;; Coordination Strategy 1

n1-1st-any-1st-any-any-pl-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & 1st-any-1st-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-1st-any-1st-any-any-pl-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & 1st-any-1st-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-2nd-2nd-2nd-any-any-pl-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & 2nd-2nd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-2nd-2nd-2nd-any-any-pl-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & 2nd-2nd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-2nd-3rd-2nd-any-any-pl-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & 2nd-3rd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-2nd-3rd-2nd-any-any-pl-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & 2nd-3rd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-3rd-3rd-3rd-any-any-pl-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & 3rd-3rd-3rd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-3rd-3rd-3rd-any-any-pl-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & 3rd-3rd-3rd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-any-1st-1st-any-any-pl-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & any-1st-1st-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-any-1st-1st-any-any-pl-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & any-1st-1st-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-3rd-2nd-2nd-any-any-pl-top-coord-rule := basic-n-top-coord-rule & monopoly-top-coord-rule & 3rd-2nd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-3rd-2nd-2nd-any-any-pl-mid-coord-rule := basic-n-mid-coord-rule & monopoly-mid-coord-rule & 3rd-2nd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

n1-bottom-coord-rule := conj-first-bottom-coord-rule & n-bottom-coord-phrase & pass-up-png-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

;;; Coordination Strategy 1

np1-1st-any-1st-any-any-pl-top-coord-rule := basic-np-top-coord-rule & monopoly-top-coord-rule & 1st-any-1st-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

np1-1st-any-1st-any-any-pl-mid-coord-rule := basic-np-mid-coord-rule & monopoly-mid-coord-rule & 1st-any-1st-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

np1-2nd-2nd-2nd-any-any-pl-top-coord-rule := basic-np-top-coord-rule & monopoly-top-coord-rule & 2nd-2nd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

np1-2nd-2nd-2nd-any-any-pl-mid-coord-rule := basic-np-mid-coord-rule & monopoly-mid-coord-rule & 2nd-2nd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

np1-2nd-3rd-2nd-any-any-pl-top-coord-rule := basic-np-top-coord-rule & monopoly-top-coord-rule & 2nd-3rd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

np1-2nd-3rd-2nd-any-any-pl-mid-coord-rule := basic-np-mid-coord-rule & monopoly-mid-coord-rule & 2nd-3rd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

np1-3rd-3rd-3rd-any-any-pl-top-coord-rule := basic-np-top-coord-rule & monopoly-top-coord-rule & 3rd-3rd-3rd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

np1-3rd-3rd-3rd-any-any-pl-mid-coord-rule := basic-np-mid-coord-rule & monopoly-mid-coord-rule & 3rd-3rd-3rd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

np1-any-1st-1st-any-any-pl-top-coord-rule := basic-np-top-coord-rule & monopoly-top-coord-rule & any-1st-1st-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

np1-any-1st-1st-any-any-pl-mid-coord-rule := basic-np-mid-coord-rule & monopoly-mid-coord-rule & any-1st-1st-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

np1-3rd-2nd-2nd-any-any-pl-top-coord-rule := basic-np-top-coord-rule & monopoly-top-coord-rule & 3rd-2nd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

np1-3rd-2nd-2nd-any-any-pl-mid-coord-rule := basic-np-mid-coord-rule & monopoly-mid-coord-rule & 3rd-2nd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

np1-bottom-coord-rule := conj-first-bottom-coord-rule & np-bottom-coord-phrase & pass-up-png-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "1" ].

;;; Feature Resolution Rules

;;; Coordination Strategy 2

n2-1st-any-1st-any-any-pl-top-coord-rule := basic-n-top-coord-rule & apoly-top-coord-rule & 1st-any-1st-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "2" ].

n2-2nd-2nd-2nd-any-any-pl-top-coord-rule := basic-n-top-coord-rule & apoly-top-coord-rule & 2nd-2nd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "2" ].

n2-2nd-3rd-2nd-any-any-pl-top-coord-rule := basic-n-top-coord-rule & apoly-top-coord-rule & 2nd-3rd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "2" ].

n2-3rd-3rd-3rd-any-any-pl-top-coord-rule := basic-n-top-coord-rule & apoly-top-coord-rule & 3rd-3rd-3rd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "2" ].

n2-any-1st-1st-any-any-pl-top-coord-rule := basic-n-top-coord-rule & apoly-top-coord-rule & any-1st-1st-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "2" ].

n2-3rd-2nd-2nd-any-any-pl-top-coord-rule := basic-n-top-coord-rule & apoly-top-coord-rule & 3rd-2nd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "2" ].

n2-bottom-coord-rule := unary-bottom-coord-rule & n-bottom-coord-phrase & pass-up-png-coord-rule &
  [ SYNSEM.LOCAL [ COORD-STRAT "2",
                   COORD-REL.PRED "_and_coord_rel" ] ].

;;; Coordination Strategy 2

np2-1st-any-1st-any-any-pl-top-coord-rule := basic-np-top-coord-rule & apoly-top-coord-rule & 1st-any-1st-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "2" ].

np2-2nd-2nd-2nd-any-any-pl-top-coord-rule := basic-np-top-coord-rule & apoly-top-coord-rule & 2nd-2nd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "2" ].

np2-2nd-3rd-2nd-any-any-pl-top-coord-rule := basic-np-top-coord-rule & apoly-top-coord-rule & 2nd-3rd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "2" ].

np2-3rd-3rd-3rd-any-any-pl-top-coord-rule := basic-np-top-coord-rule & apoly-top-coord-rule & 3rd-3rd-3rd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "2" ].

np2-any-1st-1st-any-any-pl-top-coord-rule := basic-np-top-coord-rule & apoly-top-coord-rule & any-1st-1st-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "2" ].

np2-3rd-2nd-2nd-any-any-pl-top-coord-rule := basic-np-top-coord-rule & apoly-top-coord-rule & 3rd-2nd-2nd-per-coord-rule & any-any-pl-num-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "2" ].

np2-bottom-coord-rule := unary-bottom-coord-rule & np-bottom-coord-phrase & pass-up-png-coord-rule &
  [ SYNSEM.LOCAL [ COORD-STRAT "2",
                   COORD-REL.PRED "_and_coord_rel" ] ].

;;; Coordination Strategy 3

vp3-top-coord-rule := basic-vp-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "3" ].

vp3-mid-coord-rule := basic-vp-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "3" ].

vp3-bottom-coord-rule := conj-first-bottom-coord-rule & vp-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "3" ].

;;; Coordination Strategy 3

s3-top-coord-rule := basic-s-top-coord-rule & monopoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "3" ].

s3-mid-coord-rule := basic-s-mid-coord-rule & monopoly-mid-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "3" ].

s3-bottom-coord-rule := conj-first-bottom-coord-rule & s-bottom-coord-phrase &
  [ SYNSEM.LOCAL.COORD-STRAT "3" ].

;;; Coordination Strategy 4

vp4-top-coord-rule := basic-vp-top-coord-rule & apoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "4" ].

vp4-bottom-coord-rule := unary-bottom-coord-rule & vp-bottom-coord-phrase &
  [ SYNSEM.LOCAL [ COORD-STRAT "4",
                   COORD-REL.PRED "_and_coord_rel" ] ].

;;; Coordination Strategy 4

s4-top-coord-rule := basic-s-top-coord-rule & apoly-top-coord-rule &
  [ SYNSEM.LOCAL.COORD-STRAT "4" ].

s4-bottom-coord-rule := unary-bottom-coord-rule & s-bottom-coord-phrase &
  [ SYNSEM.LOCAL [ COORD-STRAT "4",
                   COORD-REL.PRED "_and_coord_rel" ] ].
